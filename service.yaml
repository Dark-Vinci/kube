apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: name
  ports:
    - protocol: TCP
      port: 3001 #to running machine
      targetPort: 3001 #from container
      name: http
  type: LoadBalancer # for multiple pod in the same node[ClusterIP, NodePort, LoadBalancer]

--- # must be three

apiVersion: v1
kind: Service
metadata:
  name: another
spec:
  selector:
    app: name
  ports:
    - protocol: TCP
      port: 3000 #to running machine
      targetPort: 3000 #from container
      name: http
  type: LoadBalancer # ClusterIP[Ip assigned to the container by the cluster, also have load balancing capability, changes quite often but not as much as NodePort]

# service should come before deployment

# k8s comes with coreDNS, this create domain name for all services running in k8s
# the dns name is the name [service name].namespace


# TWO OPTIONS FOR DEPLOYING APPLICATION TO PROD 
# 1) Kops
#   -> spin out your ec2 instance, configure and install all necessary dependencies
#   -> Managed with KOPS

# 2) Use fully blown k8s cluster management, i.e aws EKS, Google GKE

